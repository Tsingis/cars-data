services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
      no_cache: false
      args:
        DATA_URL: ''
        PORT: 3000
    depends_on:
      server:
        condition: service_started
        restart: true
    image: cars
    container_name: cars
    ports:
      - 3000:3000
    user: nginx
    read_only: true
    privileged: false
    tmpfs:
      - /tmp:rw
  server:
    image: python:3.14-alpine
    container_name: cars-server
    volumes:
      - ./util:/scripts
      - ./data:/data
    ports:
      - 8000:8000
    read_only: true
    privileged: false
    tmpfs:
      - /tmp:rw
    command: ["python", "/scripts/http_server.py"]
  data:
    build:
      context: ./data
      dockerfile: Dockerfile
      no_cache: false
      args:
        POETRY_VERSION: ${POETRY_VERSION}
    image: cars-lambda
    container_name: cars-lambda
    ports:
      - 9000:8080
    user: lambda
    read_only: true
    privileged: false
    tmpfs:
      - /tmp:rw
  tests:
    build:
      context: .
      dockerfile: ./util/Dockerfile
      no_cache: false
    image: cars-tests
    container_name: cars-tests
    environment:
      - CI=true
      - MAX_DIFF_PIXEL_RATIO=0
    read_only: false
    privileged: true
    volumes:
    - ./app/tests/playwright:/app/tests/playwright
    - ./app/test-results:/app/test-results
    - ./data:/data
    command: ["pnpm", "run", "playwright"]