name: playwright
on:
  pull_request:
    branches:
      - main
    paths:
      - "app/src/**"
      - "app/tests/playwright/**"
      - "app/vite.config.ts"
      - "app/playwright.config.ts"
      - "app/tsconfig.json"
      - "app/package*.json"
      - "util/http_server.py"
      - "data/data.json"
      - ".github/workflows/playwright.yml"
  workflow_dispatch:
env:
  NO_UPDATE_NOTIFIER: true
jobs:
  playwright:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: "./app/package-lock.json"
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Cache Playwright browsers and app dependencies
        id: playwright-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            app/node_modules
          key: ${{ runner.os }}-playwright-${{ hashFiles('app/package*.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-${{ runner.os }}-
            ${{ runner.os }}-playwright-
      - name: Install dependencies
        if: steps.playwright-cache.outputs.cache-hit != 'true' || hashFiles('app/package*.json') != hashFiles('app/package*.json', 'HEAD^')
        run: npm ci
        working-directory: ./app
      - name: Build
        run: npm run build
        working-directory: ./app
      - name: Setup
        run: npm run playwright:setup
        working-directory: ./app
      - name: Run tests
        run: npm run playwright
        working-directory: ./app
        env:
          CI: true
          NO_SCREENSHOTS: false
          MAX_DIFF_PIXEL_RATIO: ${{ vars.MAX_DIFF_PIXEL_RATIO }}
