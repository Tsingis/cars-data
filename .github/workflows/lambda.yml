name: lambda
on:
  push:
    branches:
      - main
    paths:
      - "data/src/**"
      - "data/requirements.txt"
      - "data/package*.json"
      - "data/serverless.yml"
      - ".github/workflows/lambda.yml"
  pull_request:
    branches:
      - main
    paths:
      - "data/src/**"
      - "data/requirements.txt"
      - "data/package*.json"
      - "data/serverless.yml"
      - ".github/workflows/lambda.yml"
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
env:
  SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
  BUCKET: ${{ secrets.BUCKET }}
  FILENAME: ${{ secrets.FILENAME }}
  DISTRIBUTION: ${{ secrets.DISTRIBUTION }}
jobs:
  audit:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          architecture: "x64"
      - name: Audit python dependencies
        run: |
          pip install pip-audit
          pip-audit -r requirements.txt --strict
        working-directory: ./data
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
        working-directory: ./app
  package:
    runs-on: ubuntu-latest
    if: github.event_name != 'push'
    needs:
      - setup
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
        working-directory: ./data
      - name: Package
        run: npm run package
        working-directory: ./data
  deploy:
    runs-on: ubuntu-latest
    needs:
      - audit
      - setup
    if: always() && needs.audit.result != 'failure' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
        working-directory: ./data
      - name: Deploy
        run: npm run deploy
        working-directory: ./data
