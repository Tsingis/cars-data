name: lambda
on:
  push:
    branches:
      - main
    paths:
      - "data/src/**"
      - "data/pyproject.toml"
      - "data/poetry.lock"
      - "data/Dockerfile"
  pull_request:
    branches:
      - main
    paths:
      - "data/src/**"
      - "data/pyproject.toml"
      - "data/poetry.lock"
      - "data/Dockerfile"
      - ".github/workflows/lambda.yml"
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v5
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build image
        run: |
          docker build --build-arg POETRY_VERSION=${{ vars.POETRY_VERSION }} \
          -t ${{ vars.IMAGE_REPOSITORY }}:${{ vars.IMAGE_TAG }} .
        working-directory: ./data
      - name: Push image
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        run: |
          docker push ${{ vars.IMAGE_REPOSITORY }}:${{ vars.IMAGE_TAG }}
        working-directory: ./data
      - name: Deploy
        if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: |
          aws lambda update-function-code \
          --function-name ${{ vars.LAMBDA_NAME }} \
          --image-uri ${{ vars.IMAGE_REPOSITORY }}:${{ vars.IMAGE_TAG }}
