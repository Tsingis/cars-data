Parameters:
  BucketName:
    Type: String
    Description: Name of the S3 bucket
  CloudFrontDistributionId:
    Type: String
    Description: ID of the CloudFront distribution

Resources:
  LambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CarsDataLambdaRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole

  LambdaFunctionS3Policy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaFunctionS3Policy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
              - s3:PutObjectTagging
            Resource: !Sub arn:aws:s3:::${BucketName}/*
          - Effect: Allow
            Action:
              - s3:ListBucket
            Resource: !Sub arn:aws:s3:::${BucketName}
      Roles:
        - !Ref LambdaFunctionRole

  LambdaFunctionCloudWatchPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaFunctionCloudWatchPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "*"
      Roles:
        - !Ref LambdaFunctionRole

  LambdaFunctionCloudFrontPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: LambdaFunctionCloudFrontPolicy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - cloudfront:CreateInvalidation
            Resource: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistributionId}
      Roles:
        - !Ref LambdaFunctionRole
